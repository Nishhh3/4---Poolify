
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from config import get_db_connection
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"./assets/frame8")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


def open_user_page(previous_window, user_id):
    previous_window.destroy()
    window = Tk()

    window.geometry("531x660")
    window.configure(bg = "#FFFFFF")


    # Fetch user data
    conn = get_db_connection()
    if conn is not None:
        cursor = conn.cursor()
        cursor.execute("SELECT username, email, password_hash, phone FROM users WHERE user_id = %s", (user_id,))
        user_data = cursor.fetchone()
        cursor.close()
        conn.close()

    canvas = Canvas(
        window,
        bg = "#FFFFFF",
        height = 660,
        width = 531,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
    )

    canvas.place(x = 0, y = 0)
    image_image_1 = PhotoImage(
        file=relative_to_assets("image_1.png"))
    image_1 = canvas.create_image(
        265.0,
        330.0,
        image=image_image_1
    )

    canvas.create_rectangle(
        0.0,
        0.0,
        531.0,
        58.0,
        fill="#D1850A",
        outline="")

    canvas.create_text(
        76.0,
        6.0,
        anchor="nw",
        text="User Account",
        fill="#FFFFFF",
        font=("Inika Bold", 36 * -1)
    )

    canvas.create_text(
        27.0,
        96.0,
        anchor="nw",
        text="Username",
        fill="#000000",
        font=("Inika Bold", 32 * -1)
    )

    entry_image_1 = PhotoImage(
        file=relative_to_assets("entry_1.png"))
    entry_bg_1 = canvas.create_image(
        345.0,
        117.0,
        image=entry_image_1
    )
    entry_1 = Entry(
        bd=0,
        bg="#E19090",
        fg="#000716",
        highlightthickness=0
    )
    entry_1.place(
        x=214.0,
        y=96.0,
        width=262.0,
        height=40.0
    )
    entry_1.insert(0, user_data[0] if user_data[0] else "")

    canvas.create_text(
        27.0,
        179.0,
        anchor="nw",
        text="Email",
        fill="#000000",
        font=("Inika Bold", 32 * -1)
    )

    entry_image_2 = PhotoImage(
        file=relative_to_assets("entry_2.png"))
    entry_bg_2 = canvas.create_image(
        345.0,
        197.0,
        image=entry_image_2
    )
    entry_2 = Entry(
        bd=0,
        bg="#E19090",
        fg="#000716",
        highlightthickness=0
    )
    entry_2.place(
        x=214.0,
        y=176.0,
        width=262.0,
        height=40.0
    )
    entry_2.insert(0, user_data[1] if user_data[1] else "")

    canvas.create_text(
        27.0,
        262.0,
        anchor="nw",
        text="Password",
        fill="#000000",
        font=("Inika Bold", 32 * -1)
    )

    entry_image_3 = PhotoImage(
        file=relative_to_assets("entry_3.png"))
    entry_bg_3 = canvas.create_image(
        345.0,
        277.0,
        image=entry_image_3
    )
    entry_3 = Entry(
        bd=0,
        bg="#E19090",
        fg="#000716",
        highlightthickness=0
    )
    entry_3.place(
        x=214.0,
        y=256.0,
        width=262.0,
        height=40.0
    )
    entry_3.insert(0, user_data[2] if user_data[2] else "")

    canvas.create_text(
        27.0,
        345.0,
        anchor="nw",
        text="Phone No",
        fill="#000000",
        font=("Inika Bold", 32 * -1)
    )

    entry_image_4 = PhotoImage(
        file=relative_to_assets("entry_4.png"))
    entry_bg_4 = canvas.create_image(
        345.0,
        364.0,
        image=entry_image_4
    )
    entry_4 = Entry(
        bd=0,
        bg="#E19090",
        fg="#000716",
        highlightthickness=0
    )
    entry_4.place(
        x=214.0,
        y=343.0,
        width=262.0,
        height=40.0
    )
    entry_4.insert(0, user_data[3] if user_data[3] else "")

    def update_info():
            name = entry_1.get()
            email = entry_2.get()
            password = entry_3.get()
            phone = entry_4.get()
                
            conn = get_db_connection()
            if conn is not None:
                try:
                    cursor = conn.cursor()
                    update_values = (name, email, password, phone, user_id)
                    
                    cursor.execute(
                        "UPDATE users SET username=%s, email=%s, password_hash=%s, phone=%s WHERE user_id=%s",
                        update_values)
                    
                    conn.commit()
                    messagebox.showinfo("Success", "Information updated successfully!")
                    from Home_Login import open_hlogin_page
                    open_hlogin_page(window, user_id)
                except Exception as e:
                    messagebox.showerror("Error", f"Failed to update info: {str(e)}")
                finally:
                    cursor.close()
                    conn.close()

    def cancel():
        from Home_Login import open_hlogin_page
        open_hlogin_page(window, user_id)

    button_image_1 = PhotoImage(
        file=relative_to_assets("button_1.png"))
    button_1 = Button(
        image=button_image_1,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: update_info(),
        relief="flat"
    )
    button_1.place(
        x=48.0,
        y=472.0,
        width=187.0,
        height=69.0
    )

    button_image_2 = PhotoImage(
        file=relative_to_assets("button_2.png"))
    button_2 = Button(
        image=button_image_2,
        borderwidth=0,
        highlightthickness=0,
        command=lambda: cancel(),
        relief="flat"
    )
    button_2.place(
        x=293.0,
        y=472.0,
        width=187.0,
        height=69.0
    )

    image_image_2 = PhotoImage(
        file=relative_to_assets("image_2.png"))
    image_2 = canvas.create_image(
        30.0,
        29.0,
        image=image_image_2
    )
    window.resizable(False, False)
    window.mainloop()
